[Golang] Even Fibonacci Numbers - Problem 2 - Project Euler
###########################################################

:date: 2017-12-17T23:08+08:00
:tags: Go, Golang, Algorithm, Math, Project Euler
:category: Go
:summary: Go solution to Even Fibonacci numbers
          - Problem 2 - Project Euler.
:og_image: https://www.mathsisfun.com/numbers/images/fibonacci-spiral.svg
:adsu: yes

**Problem**: [1]_

  Each new term in the Fibonacci sequence is generated by adding the previous
  two terms. By starting with 1 and 2, the first 10 terms will be:

  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

  By considering the terms in the Fibonacci sequence whose values do not exceed
  four million, find the sum of the even-valued terms.


**Solution**:

  the sum of the even-valued terms below 4,000,000 is 4613732


.. rubric:: `Run Code on Go Playground <https://play.golang.org/p/xicyDsHzDu>`__
   :class: align-center

.. code-block:: go

  package main

  import (
  	"fmt"
  )

  func main() {
  	var a, b, sum uint64 = 1, 2, 2
  	for a+b < 4000000 {
  		next := a + b
  		//fmt.Println(next)
  		if next%2 == 0 {
  			sum += next
  		}
  		a = b
  		b = next
  	}
  	fmt.Println("the sum of the even-valued terms below 4,000,000 is", sum)
  }

.. adsu:: 2

Tested on: `Go Playground`_

----

References:

.. [1] `Even Fibonacci numbers - Problem 2 - Project Euler <https://projecteuler.net/problem=2>`_

.. _Go: https://golang.org/
.. _Golang: https://golang.org/
.. _Go Playground: https://play.golang.org/
